{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCaA,KAAM,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,KAAE,CAAI,CAAA,OAAE,CAAM,CAAE,CAPtB,CACX,KAAM,SAAS,aAAa,CAAC,aAC7B,MAAO,SAAS,aAAa,CAAC,uBAC9B,KAAM,SAAS,aAAa,CAAC,sBAC7B,OAAQ,SAAS,aAAa,CAAC,uBACjC,EAIA,EAAK,gBAAgB,CAAC,SAGtB,SAA0B,CAAK,EAC7B,EAAM,cAAc,GACpB,IAAI,EAAa,OAAO,EAAM,KAAK,EAEnC,IAAK,IAAI,EAAgB,EAAG,GAAiB,EAAO,KAAK,CAAE,IACzD,AAWJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAgB,KAAK,MAAM,GAAK,GACtC,WAAW,KACL,GACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE5B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAC3B,EAAG,EACL,EACF,CAAA,EArBkB,EAAe,GAC1B,IAAI,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACxB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,OAAO,CAAC,CAAC,2BAAoB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAChE,GACC,KAAK,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACzB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,OAAO,CAAC,CAAC,0BAAmB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAC/D,GACF,GAAc,OAAO,EAAK,KAAK,CAEnC","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// ---------- IMPORTS\n\nvar $iQIUW = parcelRequire(\"iQIUW\");\n// ---------- DECLARATIONS\nconst $47d4ff9957288465$var$refs = {\n    form: document.querySelector(\"form.form\"),\n    delay: document.querySelector('input[name=\"delay\"]'),\n    step: document.querySelector('input[name=\"step\"]'),\n    amount: document.querySelector('input[name=\"amount\"]')\n};\nconst { form: $47d4ff9957288465$var$form, delay: $47d4ff9957288465$var$delay, step: $47d4ff9957288465$var$step, amount: $47d4ff9957288465$var$amount } = $47d4ff9957288465$var$refs;\n$47d4ff9957288465$var$form.addEventListener(\"submit\", $47d4ff9957288465$var$promiseGenerator);\n// ---------- FUNCTIONS\nfunction $47d4ff9957288465$var$promiseGenerator(event) {\n    event.preventDefault();\n    let delayValue = Number($47d4ff9957288465$var$delay.value);\n    for(let positionValue = 1; positionValue <= $47d4ff9957288465$var$amount.value; positionValue++){\n        $47d4ff9957288465$var$createPromise(positionValue, delayValue).then(({ position: position, delay: delay })=>{\n            (0, $iQIUW.Notify).success(`\\u{2705} Fulfulled promise ${position} in ${delay}ms`);\n        }).catch(({ position: position, delay: delay })=>{\n            (0, $iQIUW.Notify).failure(`\\u{274C} Rejected promise ${position} in ${delay}ms`);\n        });\n        delayValue += Number($47d4ff9957288465$var$step.value);\n    }\n}\nfunction $47d4ff9957288465$var$createPromise(position, delay) {\n    return new Promise((resolve, reject)=>{\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(()=>{\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\n\n\n//# sourceMappingURL=03-promises.c7f800e9.js.map\n","// ---------- IMPORTS\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// ---------- DECLARATIONS\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', promiseGenerator);\n\n// ---------- FUNCTIONS\nfunction promiseGenerator(event) {\n  event.preventDefault();\n  let delayValue = Number(delay.value);\n\n  for (let positionValue = 1; positionValue <= amount.value; positionValue++) {\n    createPromise(positionValue, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfulled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$iQIUW","form","$47d4ff9957288465$var$form","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","document","querySelector","addEventListener","event","preventDefault","delayValue","Number","value","positionValue","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c7f800e9.js.map"}